[manifest]
version = "0.0.0"
dump_lua = true
priority = 233

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
if modded then update_hand_text({sound = 'chips2', modded = modded}, {chips = hand_chips, mult = mult}) end'''
match_indent = true
position = "after"
payload = '''
-- context.just_before
SMODS.calculate_context({full_hand = G.play.cards, scoring_hand = scoring_hand, scoring_name = text, poker_hands = poker_hands, just_before = true})
'''


[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
if modded then update_hand_text({sound = 'chips2', modded = modded}, {chips = hand_chips, mult = mult}) end
'''
match_indent = true
position = "after"
payload = '''
G.aejp_tsarlist = {}
for i = 1, #G.jokers.cards do
	G.aejp_tsarlist[i] = false
end
repeat
'''

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
            if deck_effect then SMODS.calculate_effect(deck_effect, G.deck.cards[1] or G.deck) end
        end end'''
match_indent = true
position = "after" 
payload = '''
			local leave = true
			local table_contains = function(a) 
				for _, q in ipairs(G.aejp_tsarlist or {}) do
					if a == q then
						return true
					end
				return false
				end
			end
			if G.GAME.current_round.hands_left == 0 then
				for k,v in ipairs(G.jokers.cards) do
					if v.ability.name == "j_aejp_bell" and not G.aejp_tsarlist[k] then
						G.aejp_tsarlist[k] = true
						leave = false
						delay(1.25)
						card_eval_status_text(v, "extra", nil, nil, nil, {
							message = localize { type = 'variable', key = 'full_retrigger', vars = { } },
							sound = "talisman_eemult",
							colour = G.ARGS.LOC_COLOURS.weird,
							volume = 0.65
						})
						delay(0.75)
						break
					end
				end
			end
			until leave
'''
# wtf man